package dev.knalis.sao_telegram_bot.composer.impl;

import dev.knalis.sao_telegram_bot.composer.ContextKey;
import dev.knalis.sao_telegram_bot.composer.intrf.BackComposer;
import dev.knalis.sao_telegram_bot.composer.ComposerContext;
import dev.knalis.sao_telegram_bot.model.button.Button;
import dev.knalis.sao_telegram_bot.service.UserService;
import dev.knalis.sao_telegram_bot.util.KeyboardUtil;
import lombok.AccessLevel;
import lombok.RequiredArgsConstructor;
import lombok.experimental.FieldDefaults;
import org.springframework.stereotype.Component;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.InlineKeyboardButton;

import java.util.ArrayList;
import java.util.List;

@Component
@RequiredArgsConstructor
@FieldDefaults(level = AccessLevel.PRIVATE, makeFinal = true)
public class MenuComposer implements BackComposer {

    UserService userService;

    @Override
    public String composeText(ComposerContext context) {
        return """
                <b>üìã –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>
                
                –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—É–Ω–∫—Ç–æ–≤ –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å:
                - üë§ <b>–ê–∫–∫–∞—É–Ω—Ç</b>: –ü—Ä–æ—Å–º–æ—Ç—Ä –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–∞—à–∏–º –∞–∫–∫–∞—É–Ω—Ç–æ–º.
                - üõí <b>–ú–∞–≥–∞–∑–∏–Ω</b>: –ü–æ–∫—É–ø–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –∏ –ø–∞–∫–µ—Ç–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π.
                - üí° <b>–ò–¥–µ–∏</b>: –û—Å—Ç–∞–≤–∏—Ç—å —Å–≤–æ—é –∏–¥–µ—é –∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å —Ä–∞–Ω–µ–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö.
                - üë• <b>–ë–∞–Ω–¥—ã</b>: –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É—á–∞—Å—Ç–∏–µ–º –≤ –±–∞–Ω–¥–µ.
                - ‚öôÔ∏è <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏</b>: –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤.
                
                –ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –≤–æ–ø—Ä–æ—Å—ã ‚Äî –ø–∏—à–∏—Ç–µ @Statleykill
                """;
    }


    @Override
    public List<List<InlineKeyboardButton>> composeButtons(ComposerContext context) {
        var chatId = context.get(ContextKey.CHAT_ID);
        var user = userService.getUser(Long.parseLong(chatId));

        List<List<InlineKeyboardButton>> rows = new ArrayList<>();
        rows.addAll(KeyboardUtil.formCallbackButtons(
                List.of(Button.builder().callbackData("user/" + chatId).text("üë§ –ê–∫–∫–∞—É–Ω—Ç").build().toInlineButton()),
                List.of(Button.builder().callbackData("messagepack/" + 1).text("üõí –ú–∞–≥–∞–∑–∏–Ω").build().toInlineButton()),
                List.of(Button.builder().callbackData("idea/" + 1).text("üí° –ò–¥–µ–∏").build().toInlineButton()),
                List.of(Button.builder().callbackData("gang").text("üë• –ë–∞–Ω–¥—ã").build().toInlineButton()),
                List.of(Button.builder().callbackData("settings/" + chatId + "/OTHER").text("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏").build().toInlineButton())
        ));

        if (user != null && user.getRoles() != null && user.getRoles().contains("ADMIN")) {
            rows.add(List.of(Button.builder()
                    .callbackData("idea/1")
                    .text("üõ°Ô∏è –ê–¥–º–∏–Ω: –∏–¥–µ–∏")
                    .build().toInlineButton()));
        }

        rows.add(generateBackButton(context, "message/delete"));
        return rows;
    }
}
